built-in: math, datetime, os, sys, json, hash

# interpreter (python, javascript, typescript) & compiler (c++, java)
# Read about Interpreters & Compilers

external: pandas, numpy, plotly, seaborn


TEST NANO via CLI

-- VCS by devops engineers CI-CD
-- gitlab, bitbacket, azure devops repo, github (), GIT

--> 1st create a project in local GIT repo, push

--> git add . = to add new changes and track them
--> commit, push, pull, clone
--> commit (saves the last changes and ready to push)
--> push --> will send committed changes
--> pull --> it will sync up with github ()
--> clone -->

--> cd .. = in order to exit repo and go back
--> ls -la = in order to see content inside repo (directory)
--> pwd = path where directory
--> cd directory_name = enter to directory
--> mkdir -> make directory

--> UNIX => Linux & Apple for their CLI

OS (track, commit & commit message, push,  ~time, pull) -> GIT (master) -> GITHUB (master)

--> you will create a new branch always based on in which branch you are right now
--> command to create branch: git checkout -b <branch_name>  (feature/DA-555)
--> branch will be created in local GIT repo VCS

--> Branch does not exist in remote repo (in order to sync together)
--> git push --set-upstream origin feature/DA-555

--> git push --> (changes from new branch)

--> git checkout <branch_name> (master) (but before changing branches, commit files)






